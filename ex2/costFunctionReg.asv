function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

for i=1:m,
    J = J + (-y(i)*log(sigmoid(X(i,:)*theta))-(1-y(i))...
        *log(1-sigmoid(X(i,:)*theta))');
end;
[M N]=size(theta);
J = J/m;
reg = 0;
for i=2:M,
    reg = reg + theta(i)^2;
end;

reg = lambda*reg/(2*m);
J = J + reg;

grad(1) = X(:,1)'*(sigmoid(X(:,1)*theta(1))-y(1))/m;
    
grad(2:M) = X(:,2:M)'*(sigmoid(X(:,2:M)*theta(2:M))-y)/m;
    
    




% =============================================================

end
